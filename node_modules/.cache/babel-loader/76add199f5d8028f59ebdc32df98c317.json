{"ast":null,"code":"import _slicedToArray from\"/home/bazig/Downloads/netlifyP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import\"./Chat.css\";import{Avatar,IconButton}from\"@material-ui/core\";import SearchOutlinedIcon from\"@material-ui/icons/SearchOutlined\";import AttachFileOutlinedIcon from\"@material-ui/icons/AttachFileOutlined\";import MoreVertOutlinedIcon from\"@material-ui/icons/MoreVertOutlined\";import InsertEmoticonIcon from\"@material-ui/icons/InsertEmoticon\";import MicIcon from\"@material-ui/icons/Mic\";import{useParams}from\"react-router-dom\";import db from\"../../Config/firebase\";import{useStateValue}from\"../../Datalayer/StateProvider\";import firebase from\"firebase\";var Chat=function Chat(){var _messages,_messages$timestamp;var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),user=_useStateValue2[0].user,dispatch=_useStateValue2[1];var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),seed=_useState2[0],setSeed=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var ref=useRef(null);var _useParams=useParams(),roomId=_useParams.roomId;// getting the parameter passed as a url\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),roomName=_useState6[0],setRoomName=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];//for storing a messages or chats\nuseEffect(function(){//   to render the chat based on the roomid provided as a url params and run for each roomId changes\nif(roomId){db.collection(\"rooms\").doc(roomId).onSnapshot(function(snapshot){return setRoomName(snapshot.data().name);});db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(function(snapshot){setMessages(snapshot.docs.map(function(doc){return doc.data();}));});}},[roomId]);useEffect(function(){setSeed(Math.floor(Math.random()*5000));},[roomId]);var sendMessage=function sendMessage(e){e.preventDefault();if(input){db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({message:input,name:user.displayName,timestamp:firebase.firestore.FieldValue.serverTimestamp()// to add the timestamp of the server time\n});setInput(\"\");ref.current.scrollTo(0,ref.current.scrollHeight+100);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"chat\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat__header\"},/*#__PURE__*/React.createElement(Avatar,{src:\"https://avatars.dicebear.com/api/human/\".concat(seed,\".svg\")}),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__headerInfo\"},/*#__PURE__*/React.createElement(\"h3\",null,roomName),/*#__PURE__*/React.createElement(\"p\",null,messages.length!==0?new Date((_messages=messages[messages.length-1])===null||_messages===void 0?void 0:(_messages$timestamp=_messages.timestamp)===null||_messages$timestamp===void 0?void 0:_messages$timestamp.toDate()).toUTCString():\"\")),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__headerRight\"},/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(SearchOutlinedIcon,null)),/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(AttachFileOutlinedIcon,null)),/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(MoreVertOutlinedIcon,null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__body\",ref:ref},messages.map(function(message,index){var _message$timestamp;return/*#__PURE__*/React.createElement(\"p\",{className:\"chat__message \".concat(message.name===user.displayName&&\"chat__receiver\"//to check if the messaging user is same as the logged in user then it //////will be on right side\n),key:index},/*#__PURE__*/React.createElement(\"span\",{className:\"chat__name\"},message.name),message.message,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"chat__timestamp\"},new Date((_message$timestamp=message.timestamp)===null||_message$timestamp===void 0?void 0:_message$timestamp.toDate()).toUTCString()));})),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__footer\"},/*#__PURE__*/React.createElement(InsertEmoticonIcon,null),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:input,onChange:function onChange(e){return setInput(e.target.value);},placeholder:\"Send Message\"}),/*#__PURE__*/React.createElement(\"button\",{onClick:sendMessage},\"Send a message\")),/*#__PURE__*/React.createElement(MicIcon,null)));};export default Chat;","map":{"version":3,"sources":["/home/bazig/Downloads/netlifyP/src/Components/Chats/Chat.js"],"names":["React","useState","useEffect","useRef","Avatar","IconButton","SearchOutlinedIcon","AttachFileOutlinedIcon","MoreVertOutlinedIcon","InsertEmoticonIcon","MicIcon","useParams","db","useStateValue","firebase","Chat","user","dispatch","seed","setSeed","input","setInput","ref","roomId","roomName","setRoomName","messages","setMessages","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","sendMessage","e","preventDefault","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","current","scrollTo","scrollHeight","length","Date","toDate","toUTCString","index","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\nimport AttachFileOutlinedIcon from \"@material-ui/icons/AttachFileOutlined\";\nimport MoreVertOutlinedIcon from \"@material-ui/icons/MoreVertOutlined\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"../../Config/firebase\";\nimport { useStateValue } from \"../../Datalayer/StateProvider\";\nimport firebase from \"firebase\";\nconst Chat = () => {\n  const [{ user }, dispatch] = useStateValue();\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const ref = useRef(null);\n\n  const { roomId } = useParams(); // getting the parameter passed as a url\n\n  const [roomName, setRoomName] = useState(\"\");\n\n  const [messages, setMessages] = useState([]); //for storing a messages or chats\n  useEffect(() => {\n    //   to render the chat based on the roomid provided as a url params and run for each roomId changes\n    if (roomId) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot(snapshot => setRoomName(snapshot.data().name));\n\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot(snapshot => {\n          setMessages(snapshot.docs.map(doc => doc.data()));\n        });\n    }\n  }, [roomId]);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (input) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .add({\n          message: input,\n          name: user.displayName,\n          timestamp: firebase.firestore.FieldValue.serverTimestamp()\n          // to add the timestamp of the server time\n        });\n      setInput(\"\");\n      ref.current.scrollTo(0, ref.current.scrollHeight + 100);\n    }\n  };\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n        <div className=\"chat__headerInfo\">\n          <h3>{roomName}</h3>\n          {/* the last seen is implemented by checking the time of the last message from the chat */}\n          <p>\n            {messages.length !== 0\n              ? new Date(\n                  messages[messages.length - 1]?.timestamp?.toDate()\n                ).toUTCString()\n              : \"\"}\n          </p>\n        </div>\n        <div className=\"chat__headerRight\">\n          <IconButton>\n            <SearchOutlinedIcon />\n          </IconButton>\n          <IconButton>\n            <AttachFileOutlinedIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertOutlinedIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"chat__body\" ref={ref}>\n        {messages.map((message, index) => {\n          return (\n            <p\n              className={`chat__message ${\n                message.name === user.displayName && \"chat__receiver\"\n                //to check if the messaging user is same as the logged in user then it //////will be on right side\n              }`}\n              key={index}\n            >\n              <span className=\"chat__name\">{message.name}</span>\n              {message.message}\n              <br></br>\n              <span className=\"chat__timestamp\">\n                {new Date(message.timestamp?.toDate()).toUTCString()}\n              </span>\n            </p>\n          );\n        })}\n      </div>\n      <div className=\"chat__footer\">\n        <InsertEmoticonIcon />\n        <form>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={e => setInput(e.target.value)}\n            placeholder=\"Send Message\"\n          />\n          <button onClick={sendMessage}>Send a message</button>\n        </form>\n        <MicIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}
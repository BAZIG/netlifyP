{"ast":null,"code":"import _slicedToArray from\"/home/bazig/Downloads/netlifyP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./Sidebar.css\";import{Avatar,IconButton,Button}from\"@material-ui/core\";import DonutLargeIcon from\"@material-ui/icons/DonutLarge\";import ChatIcon from\"@material-ui/icons/Chat\";import MoreVertIcon from\"@material-ui/icons/MoreVert\";import SearchOutlinedIcon from\"@material-ui/icons/SearchOutlined\";import SidebarChat from\"../SidebarChat/SidebarChat\";import db from\"../../Config/firebase\";import{useStateValue}from\"../../Datalayer/StateProvider\";import Switch from\"@material-ui/core/Switch\";import{actionType}from\"../../Datalayer/reducer\";import{useHistory}from\"react-router-dom\";var Sidebar=function Sidebar(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rooms=_useState2[0],setRooms=_useState2[1];var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),user=_useStateValue2[0].user,dispatch=_useStateValue2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),checked=_useState6[0],setChecked=_useState6[1];var history=useHistory();useEffect(function(){var unsubscribe=db.collection(\"rooms\").onSnapshot(function(snapshot){setRooms(snapshot.docs.map(function(doc){return{id:doc.id,data:doc.data()};}));});return function(){unsubscribe();//to perform the cleanup actions\n};},[]);var filteredRoom=rooms.filter(function(room){return room.data.name.includes(search.toLowerCase());});var handleChange=function handleChange(){setChecked(!checked);dispatch({type:actionType.SET_MODE,mode:checked});};var logout=function logout(){dispatch({type:actionType.SET_USER,user:null});history.push(\"/\");};return/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__header\"},/*#__PURE__*/React.createElement(Avatar,{src:user===null||user===void 0?void 0:user.photoURL}),/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__headerRight\"},/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(DonutLargeIcon,null)),/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(ChatIcon,null)),/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(MoreVertIcon,null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__callToAction\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__callToActionLeft\"},/*#__PURE__*/React.createElement(\"p\",null,\"\".concat(checked?\"Disable\":\"Enable\",\" Dark Mode\")),/*#__PURE__*/React.createElement(Switch,{checked:checked,onChange:handleChange,name:\"checkedA\",inputProps:{\"aria-label\":\"secondary checkbox\"}})),/*#__PURE__*/React.createElement(Button,{onClick:logout},\"Logout\")),/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar_search\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__searchContainer\"},/*#__PURE__*/React.createElement(SearchOutlinedIcon,null),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Search or Start new Chat\",value:search,onChange:function onChange(e){return setSearch(e.target.value);},type:\"text\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar__chats\"},/*#__PURE__*/React.createElement(SidebarChat,{addNewChat:true}),filteredRoom.map(function(room){return/*#__PURE__*/React.createElement(SidebarChat,{key:room.id,id:room.id,name:room.data.name});})));};export default Sidebar;","map":{"version":3,"sources":["/home/bazig/Downloads/netlifyP/src/Components/Sidebar/Sidebar.js"],"names":["React","useState","useEffect","Avatar","IconButton","Button","DonutLargeIcon","ChatIcon","MoreVertIcon","SearchOutlinedIcon","SidebarChat","db","useStateValue","Switch","actionType","useHistory","Sidebar","rooms","setRooms","user","dispatch","search","setSearch","checked","setChecked","history","unsubscribe","collection","onSnapshot","snapshot","docs","map","doc","id","data","filteredRoom","filter","room","name","includes","toLowerCase","handleChange","type","SET_MODE","mode","logout","SET_USER","push","photoURL","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Sidebar.css\";\nimport { Avatar, IconButton, Button } from \"@material-ui/core\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\nimport SidebarChat from \"../SidebarChat/SidebarChat\";\nimport db from \"../../Config/firebase\";\nimport { useStateValue } from \"../../Datalayer/StateProvider\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { actionType } from \"../../Datalayer/reducer\";\nimport { useHistory } from \"react-router-dom\";\nconst Sidebar = () => {\n  const [rooms, setRooms] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n  const [search, setSearch] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const unsubscribe = db.collection(\"rooms\").onSnapshot(snapshot => {\n      setRooms(\n        snapshot.docs.map(doc => {\n          return {\n            id: doc.id,\n            data: doc.data()\n          };\n        })\n      );\n    });\n    return () => {\n      unsubscribe(); //to perform the cleanup actions\n    };\n  }, []);\n  const filteredRoom = rooms.filter(room => {\n    return room.data.name.includes(search.toLowerCase());\n  });\n\n  const handleChange = () => {\n    setChecked(!checked);\n    dispatch({\n      type: actionType.SET_MODE,\n      mode: checked\n    });\n  };\n  const logout = () => {\n    dispatch({\n      type: actionType.SET_USER,\n      user: null\n    });\n    history.push(\"/\");\n  };\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar src={user?.photoURL} />\n        <div className=\"sidebar__headerRight\">\n          <IconButton>\n            <DonutLargeIcon />\n          </IconButton>\n          <IconButton>\n            <ChatIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar__callToAction\">\n        <div className=\"sidebar__callToActionLeft\">\n          <p>{`${checked ? \"Disable\" : \"Enable\"} Dark Mode`}</p>\n          <Switch\n            checked={checked}\n            onChange={handleChange}\n            name=\"checkedA\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n          />\n        </div>\n        <Button onClick={logout}>Logout</Button>\n      </div>\n\n      <div className=\"sidebar_search\">\n        <div className=\"sidebar__searchContainer\">\n          <SearchOutlinedIcon />\n          <input\n            placeholder=\"Search or Start new Chat\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div className=\"sidebar__chats\">\n        <SidebarChat addNewChat />\n        {filteredRoom.map(room => {\n          return (\n            <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}